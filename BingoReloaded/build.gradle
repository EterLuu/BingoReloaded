import io.papermc.paperweight.userdev.ReobfArtifactConfiguration

plugins {
    id 'java'
    id 'io.github.goooler.shadow' version '8.1.7'
    id 'io.papermc.paperweight.userdev' version '1.7.3'
}

group = 'io.github.steaf23'
version = '3.1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url 'https://repo.codemc.io/repository/maven-releases/'
    }
    maven {
        url 'https://repo.codemc.io/repository/maven-snapshots/'
    }
}

dependencies {
    paperweightDevelopmentBundle("io.papermc.paper:dev-bundle:1.21.3-R0.1-SNAPSHOT")
    compileOnly 'me.clip:placeholderapi:2.11.6'
    implementation 'org.apache.commons:commons-configuration2:2.11.0'
    implementation 'org.apache.commons:commons-compress:1.26.0'
    implementation 'commons-io:commons-io:2.17.0'
    // https://mvnrepository.com/artifact/org.tukaani/xz
    implementation group: 'org.tukaani', name: 'xz', version: '1.10'
    implementation(project(":PlayerDisplay"))

    //tests
    testImplementation "io.papermc.paper:paper-api:1.21.3-R0.1-SNAPSHOT"
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'com.github.seeseemelk:MockBukkit-v1.21:3.128.0'
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

paperweight.reobfArtifactConfiguration = ReobfArtifactConfiguration.getMOJANG_PRODUCTION()

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs = ['-Xlint:deprecation']

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

tasks.jar {
    manifest {
        attributes["paperweight-mappings-namespace"] = "mojang"
    }
}
// if you have shadowJar configured
tasks.shadowJar {
    manifest {
        attributes["paperweight-mappings-namespace"] = "mojang"
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

test{
    useJUnitPlatform()
}
